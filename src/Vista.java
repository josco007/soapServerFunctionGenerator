

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.OutputStream;
import java.io.StringReader;
import java.net.JarURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import org.apache.commons.net.ftp.FTP;
import org.apache.commons.net.ftp.FTPClient;
import utilerias.FileUtils2;
import utilerias.Utilities;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author nimiranda
 */
public class Vista extends javax.swing.JFrame implements KeyListener{

    File tempFtpFile = new File("tempFtpFile.txt");
    File tempFileUp = new File("tempFileUp.txt");
    
    
    /**
     * Creates new form Vista
     */
    public Vista() {
        initComponents();
        addListeners();
        loadSavedConfiguration();
    }
    
    private void loadSavedConfiguration(){
        hostTxt.setText(Configuracion.getHostOrigen());
        userNameTxt.setText(Configuracion.getUserNameOrigen());
        portTxt.setText(Configuracion.getPortOrigen());
        urlTxt.setText(Configuracion.getUrlOrigen());
        
        hostDestinoTxt.setText(Configuracion.getTargetHost());
        userNameDestinoTxt.setText(Configuracion.getTargetUserName());
        portDestinoTxt.setText(Configuracion.getTartgetPort());
        urlDestinoTxt.setText(Configuracion.getTargetUrl());
        
        urlServerLocationTxt.setText(Configuracion.getUrlServerLocation());
        
        
    }
    
    private void addListeners(){
        hostTxt.addKeyListener(this);
        userNameTxt.addKeyListener(this);
        portTxt.addKeyListener(this);
        urlTxt.addKeyListener(this);
        
        hostDestinoTxt.addKeyListener(this);
        userNameDestinoTxt.addKeyListener(this);
        portDestinoTxt.addKeyListener(this);
        urlDestinoTxt.addKeyListener(this);
        
        urlServerLocationTxt.addKeyListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        boxlayup = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        hostTxt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        userNameTxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        passwordTxt = new javax.swing.JPasswordField();
        jLabel6 = new javax.swing.JLabel();
        portTxt = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        urlTxt = new javax.swing.JTextField();
        urlDestinoTxt = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        hostDestinoTxt = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        userNameDestinoTxt = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        passwordDestinoTxt = new javax.swing.JPasswordField();
        portDestinoTxt = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        nombreCteTxt = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        urlServerLocationTxt = new javax.swing.JTextField();
        borlayLeft = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        funcionesWebTxt = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        testWsFormsTxt = new javax.swing.JTextArea();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        boxlayup.setLayout(new javax.swing.BoxLayout(boxlayup, javax.swing.BoxLayout.LINE_AXIS));

        jPanel5.setPreferredSize(new java.awt.Dimension(1000, 111));

        jLabel1.setText("Select the file to contains the web service methods or copy paste directly or set the ftp servers for upload automatically");

        jButton1.setText("Select");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Generate");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Ftp"));

        jButton3.setText("Generate");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel2.setText("Host:");

        jLabel4.setText("User Name:");

        jLabel5.setText("Password:");

        jLabel6.setText("port:");

        jLabel7.setText("Path:");

        jLabel8.setText("Path:");

        jLabel9.setText("Host:");

        jLabel10.setText("User Name:");

        jLabel11.setText("Password:");

        jLabel12.setText("port:");

        jButton4.setText("Copy to target server");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Generate and upload");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(9, 9, 9)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(hostTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                            .addComponent(urlTxt))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(userNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(passwordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(portTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(9, 9, 9)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(hostDestinoTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
                            .addComponent(urlDestinoTxt))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(userNameDestinoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(passwordDestinoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel12)
                                .addGap(10, 10, 10)
                                .addComponent(portDestinoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton4))
                .addContainerGap(105, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(hostTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(userNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(passwordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(portTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jLabel7)
                    .addComponent(urlTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(hostDestinoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(userNameDestinoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(passwordDestinoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(portDestinoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(urlDestinoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5))
                .addContainerGap())
        );

        nombreCteTxt.setText("consumeWS.php");

        jLabel3.setText("Client Name:");

        jLabel13.setText("Url server location:");

        borlayLeft.setPreferredSize(new java.awt.Dimension(500, 200));
        borlayLeft.setLayout(new javax.swing.BoxLayout(borlayLeft, javax.swing.BoxLayout.LINE_AXIS));

        funcionesWebTxt.setColumns(20);
        funcionesWebTxt.setRows(5);
        jScrollPane4.setViewportView(funcionesWebTxt);

        borlayLeft.add(jScrollPane4);

        testWsFormsTxt.setEditable(false);
        testWsFormsTxt.setColumns(20);
        testWsFormsTxt.setRows(5);
        jScrollPane3.setViewportView(testWsFormsTxt);

        borlayLeft.add(jScrollPane3);

        jButton6.setText("Uncompress samples");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(nombreCteTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton6))
                            .addComponent(urlServerLocationTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 865, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(64, Short.MAX_VALUE))
            .addComponent(borlayLeft, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(urlServerLocationTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(nombreCteTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6))
                .addGap(18, 18, 18)
                .addComponent(borlayLeft, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        boxlayup.add(jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(boxlayup, javax.swing.GroupLayout.DEFAULT_SIZE, 1147, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(boxlayup, javax.swing.GroupLayout.DEFAULT_SIZE, 656, Short.MAX_VALUE)
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        generarFormularios();

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        seleccionarArchivo();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        hostDestinoTxt.setText(hostTxt.getText());
        userNameDestinoTxt.setText(userNameTxt.getText());
        passwordDestinoTxt.setText(new String(passwordTxt.getPassword()));
        portDestinoTxt.setText(portTxt.getText());
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if(downloadTemFileFromFtp()){
            generarFromTempFtpFile();
            generarFormularios();
        }
        
        deleteTempFiles();

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
         if(downloadTemFileFromFtp()){
            generarFromTempFtpFile();
            generarFormularios();
            uploadFileXFtp();
            deleteTempFiles();
            
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        try {
            // TODO add your handling code here:
            unCompressSamples();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(rootPane, "Error "+ex, "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(Vista.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private int countMatchesChar(String pString, Character pChar){
        int occurrences = 0;
        for(char c : pString.toCharArray()){
           if(c == pChar){
              occurrences++;
           }
        }
        
        return occurrences;
    }
    
    private void generarFromTempFtpFile(){
        cargarArchivo(tempFtpFile.getAbsolutePath());
    }
    
    private void seleccionarArchivo(){
         JFileChooser chooser = new JFileChooser();
         chooser.setCurrentDirectory(new java.io.File("."));
         chooser.setDialogTitle("Seleccione archivo con las funciones del servicio web");
         chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
         chooser.setAcceptAllFileFilterUsed(false);

         if (chooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION) {
            String pathFileSelected = chooser.getSelectedFile().getPath();
             cargarArchivo(pathFileSelected);
         }

    }
    
    private void cargarArchivo(String pPath){

        try
        {
            FileReader reader = new FileReader(pPath);
            BufferedReader br = new BufferedReader(reader);
            funcionesWebTxt.read( br, null );
            br.close();
            funcionesWebTxt.requestFocus();
        }
        catch(Exception e2) { System.out.println(e2); }
    }
    
    private void generarFormularios(){
        
        testWsFormsTxt.setText("");
        boolean soapClaseFound = false;
        boolean keySoapClaseFound = false;
        String phpVarUrlServerLocation = "<?php \n $urlServerLocation = \""+urlServerLocationTxt.getText()+"\";\n?>\n";
        String header = "<!doctype html>\n" +
                        "  <html>\n" +
                        "    <head>\n" +
                        "       <meta charset=\"UTF-8\"/>\n" +
                        "       <title> TESTEO DE SERVICIOS WEB</title>\n" +
                        "    </head>\n" +
                        "	\n" +
                        "	Informacion: <br>\n" +
                        "	*************************************************************************************************<br> \n" +
                        "	* uri : urn://soluniware.com                                                                     <br> \n" +
                        "	* server location : <?php echo $urlServerLocation; ?>                                            <br> \n" +
                        "	*************************************************************************************************<br>\n";
        String finHtml = "</html>\n";
        String inputFuncion = "";
        String hiddenServerLocation = "  <input type=\"hidden\" name=\"serverLocation\" value=<?php echo \"$urlServerLocation\"; ?>>";
        String inputSubmit = "  <input type=\"submit\" name=\"enviar\" value=\"enviar\">";
        String line;
        BufferedReader reader = new BufferedReader(new StringReader(funcionesWebTxt.getText()));
        int contLLaves = 0;
        

        try {
            
            testWsFormsTxt.append(phpVarUrlServerLocation);
            testWsFormsTxt.append(header);
            
            while ((line = reader.readLine()) != null) {

                if (line.length() > 0){
                    System.out.println(line);
                    
                    if(line.contains("soap_clase")){
                        soapClaseFound = true;
                    }
                    
                    if (!soapClaseFound) {
                        continue;
                    }
                    
                    if (!keySoapClaseFound){
                        if (line.contains("{")) {
                            keySoapClaseFound = true;
                        }
                    }
                    
                    if (!keySoapClaseFound) {
                        continue;
                    }
                    
                    contLLaves += countMatchesChar(line, '{');
                    contLLaves -= countMatchesChar(line, '}');
                    
                    if (contLLaves == 0) {
                        break;
                    }
                    
                    if(line.toUpperCase().contains("FUNCTION ")){ 
                        String nombreFuncion = getStringBetween(line, "FUNCTION ", "(");
                        testWsFormsTxt.append("<form method=\"post\" action=\""+nombreCteTxt.getText()+"\">\n");
                        inputFuncion = "  <input type= \"text\" name=\"funcion\" value ="+nombreFuncion+" readonly>";
                        testWsFormsTxt.append(inputFuncion+"\n");
                        for(String parametro : getParametersFromFunction(nombreFuncion)){
                            testWsFormsTxt.append("  <input type=\"text\" name=\""+parametro+"\" placeholder=\""+parametro+"\">\n");
                        }
                        testWsFormsTxt.append(hiddenServerLocation+"\n");
                        testWsFormsTxt.append(inputSubmit+"\n");
                        testWsFormsTxt.append("</form>\n\n\n");
                        
                    } 
                }
            }
            
            testWsFormsTxt.append(finHtml);
        } catch(IOException e) {
          e.printStackTrace();
        }
    }
    
    private ArrayList<String> getParametersFromFunction(String pNameFunction){
        boolean paraentisisAbreFinded = false;
        boolean paraentisisCierraFinded = false;
        boolean functionFound = false;
        String parameter = "";
        ArrayList<String> parameters = new ArrayList<>();
        String line;
        BufferedReader reader = new BufferedReader(new StringReader(funcionesWebTxt.getText()));

        try {
            while ((line = reader.readLine()) != null) {

                if (line.length() > 0){
                    
                    if(line.toUpperCase().contains(pNameFunction.toUpperCase())||functionFound){ 
                        functionFound = true;
                        System.out.println("si cotiene funcion");
                        
                        //recorrer caracter por caracter
                        for(int j = 0; j<line.length();j++){
                            //si se encuentra con un caracter de parantisis abierto
                            if(line.charAt(j) == '('){
                                paraentisisAbreFinded = true;
                                continue;
                            }
                            //si se encuenrtra con un caracter de coma o espacio
                            if(line.charAt(j) == ','){
                                //a lo que tenga el parametro se le quita espacios y caracter $
                                parameter = parameter.replace("$", "");
                                parameter = parameter.replaceAll("\\s","");
                                //si el parametro esta vacio
                                if (parameter.length() == 0) {
                                    continue;
                                }
                                //se agrega el parametro
                                parameters.add(parameter);
                                parameter = "";
                                continue;
                            }
                            //si encuentra un caracter de paraentices que coerra
                            if(line.charAt(j) == ')'){
                                paraentisisCierraFinded = true;
                                parameter = parameter.replace("$", "");
                                parameter = parameter.replaceAll("\\s","");
                                if (parameter.length() != 0) {
                                     parameters.add(parameter);
                                }
                                return parameters;
                            }
                            
                            if (!paraentisisAbreFinded) {
                                continue;
                            }
                            parameter += line.charAt(j);
                        }

                    }
                    
                }
            }
        } catch(IOException e) {
          e.printStackTrace();
        }
        
        return parameters;
        
        
    }
    
    private String getStringBetween(String pLine, String pString1, String pString2){
        //validaciones
        if (!pLine.toUpperCase().contains(pString1.toUpperCase())) {
            JOptionPane.showMessageDialog(null, "No se encontro string 1 para buscar una linea entre dos palabras", "Warning", JOptionPane.WARNING_MESSAGE);
            return "";
        }
        
        if (!pLine.toUpperCase().contains(pString2.toUpperCase())) {
            JOptionPane.showMessageDialog(null, "No se encontro string 2 para buscar una linea entre dos palabras", "Warning", JOptionPane.WARNING_MESSAGE);
            return "";
        }
        
        
        //proceso
        int indexString1 = 0;
        int indexString2 = 0;
        boolean string1Find = false;
        
        //recorre la linea de adelante hacia el final
        for(int i = 0; i <pLine.length(); i++){
            /*if ((pLine.substring(i, pLine.length())).length() < pString1.length() ) {
               // continue;
            }
            */
            System.out.println("line jaja = "+pLine.substring(i, (pString1.length()+i))+ " ; i = "+i+" s1 leng + i= "+(pString1.length()+i));
            if (pLine.substring(i, (pString1.length()+i)).equalsIgnoreCase(pString1)) {
                indexString1 = i;
                break;
            }
        }
        //recorre la linea del final hacia el principio
        for(int i = pLine.length(); i >= 0; i--){
            System.out.println("line reversa "+(pLine.substring(i,pLine.length())));
            if ((pLine.substring(i,pLine.length())).length()< pString2.length()) {
                System.out.println("continue");
                continue;
            }
            System.out.println("i2 = "+i+" len2 = "+ pString2.length()+i+" len line "+pLine.length());
            if (pLine.substring(i, pString2.length()+i).equalsIgnoreCase(pString2)) {
                indexString2 = i;
                break;
            }
        }
        
        
        System.out.println("index 1 "+indexString1+" index 2 " +indexString2);
        return pLine.substring(indexString1 + pString1.length() ,indexString2);
        
    }
    
    private boolean downloadTemFileFromFtp(){
        String server = hostTxt.getText();
        int port = Integer.parseInt(portTxt.getText());
        String user = userNameTxt.getText();
        String pass = new String(passwordTxt.getPassword());
        String remoteFile = urlTxt.getText();
 
        FTPClient ftpClient = new FTPClient();
        try {
 
            ftpClient.connect(server, port);
            if (!ftpClient.login(user, pass)) {
                JOptionPane.showMessageDialog(rootPane, "Usuario o contraseña incorrectos en el servidor origen", "Información", JOptionPane.INFORMATION_MESSAGE);
                 return false;
            }
            ftpClient.enterLocalPassiveMode();
            ftpClient.setFileType(FTP.BINARY_FILE_TYPE);
            
            if(!ftpClient.isConnected()){
                 JOptionPane.showMessageDialog(rootPane, "No se ha conectado al servidor origen pero el usuario y contraseña son correctos", "Información", JOptionPane.INFORMATION_MESSAGE);
                 return false;
            }
 
            // APPROACH #1: using retrieveFile(String, OutputStream)
   
            OutputStream outputStream1 = new BufferedOutputStream(new FileOutputStream(tempFtpFile));
            System.out.println("remote file = "+remoteFile);
            boolean success = ftpClient.retrieveFile(remoteFile, outputStream1);
            outputStream1.close();
 
            if (success) {
                System.out.println("File #1 has been downloaded successfully.");
            }
            else{
                JOptionPane.showMessageDialog(rootPane, "No fue posible descargar el archivo revise la url", "Información", JOptionPane.INFORMATION_MESSAGE);
                return false;
            }
           /*
            // APPROACH #2: using InputStream retrieveFileStream(String)
            OutputStream outputStream2 = new BufferedOutputStream(new FileOutputStream(tempFtpFile));
            InputStream inputStream = ftpClient.retrieveFileStream(remoteFile);
            byte[] bytesArray = new byte[4096];
            int bytesRead = -1;
            while ((bytesRead = inputStream.read(bytesArray)) != -1) {
                outputStream2.write(bytesArray, 0, bytesRead);
            }
 
            success = ftpClient.completePendingCommand();
            if (success) {
                System.out.println("File #2 has been downloaded successfully.");
            }
            */
            //outputStream2.close();
            //inputStream.close();
            
            return true;
 
        } catch (IOException ex) {
            System.out.println("Error: " + ex.getMessage());
            ex.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, ""+ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);

        } finally {
            try {
                if (ftpClient.isConnected()) {
                    ftpClient.logout();
                    ftpClient.disconnect();
                }
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
        
        return false;
    }
    
    private boolean uploadFileXFtp(){
        
        String server = hostDestinoTxt.getText();
        int port = Integer.parseInt(portDestinoTxt.getText());
        String user = userNameDestinoTxt.getText();
        String pass = new String(passwordDestinoTxt.getPassword());
        String ruta = urlDestinoTxt.getText();
        
        
        
        FTPClient client = new FTPClient();
        FileInputStream fis = null;

        try {
            client.connect(server,port);
            if (!client.login(user, pass)){
                 JOptionPane.showMessageDialog(rootPane, "Usuario o contraseña incorrectos en el servidor destino", "Información", JOptionPane.INFORMATION_MESSAGE);
                 return false;
            }
            
            if(!client.isConnected()){
                 JOptionPane.showMessageDialog(rootPane, "No se ha conectado al servidor destino pero el usuario y contraseña son correctos", "Información", JOptionPane.INFORMATION_MESSAGE);
                 return false;
            }
            
            client.enterLocalPassiveMode();
            client.setFileType(FTP.BINARY_FILE_TYPE);

            
            try (BufferedWriter fileOut = new BufferedWriter(new FileWriter(tempFileUp))) {
                testWsFormsTxt.write(fileOut);
            }
            
            
            //
            // Create an InputStream of the file to be uploaded
            //
           
            if (!tempFileUp.exists()){
                JOptionPane.showMessageDialog(rootPane, "El archivo temporal no existe", "Error", JOptionPane.ERROR_MESSAGE);
                return false ;
            }
            fis = new FileInputStream(tempFileUp);

            //
            // Store file to server
            //
            System.out.println("subiendo archivo "+ruta+ " fis = "+fis);
            client.storeFile(ruta, fis);
            client.logout();
            
            return true;
        } catch (IOException e) {
            e.printStackTrace();
            return false;
        } finally {
            try {
                if (fis != null) {
                    fis.close();
                }
                client.disconnect();
            } catch (IOException e) {
                e.printStackTrace();
            }
        
        }
    }
    
    private void deleteTempFiles(){
        if (tempFtpFile.exists()) {
           tempFtpFile.delete();
        }

        if(tempFileUp.exists()){
            tempFileUp.delete();
        }
        
    }
    
    private void unCompressSamples() throws MalformedURLException, IOException{
        Utilities utilities = new Utilities();
        
        if (utilities.getRunningJarName() != null) {
            System.out.println("running from jar");
            System.out.println(getClass().getProtectionDomain().getCodeSource().getLocation());
            JarURLConnection URLcon = null;
            URL url = null;
            URL samples = getClass().getResource("/samples/samples");
            url = new URL(samples.toString());
            URLcon = (JarURLConnection) (url.openConnection());
            File c = new File("samples");
            if (!c.exists()) {
                c.mkdir();
            }
            FileUtils2.copyJarResourcesRecursively(c, URLcon);
        }
        else{
            System.out.println("Not running from jar");
            JOptionPane.showMessageDialog(rootPane, "The aplication not is running from jar", "Information",JOptionPane.INFORMATION_MESSAGE);
        }
        
        
    }
    
    @Override
    public void keyTyped(KeyEvent e) {
        
        
    }

    @Override
    public void keyPressed(KeyEvent e) {
        
    }

    @Override
    public void keyReleased(KeyEvent e) {
        
        if (e.getComponent() == hostTxt) {
            Configuracion.setHostOrigen(hostTxt.getText());
        }
        else if (e.getComponent() == userNameTxt){
            Configuracion.setUserNameOrigen(userNameTxt.getText());
        }
        else if (e.getComponent() == portTxt){
            Configuracion.setPortOrigen(portTxt.getText());
        }
        else if (e.getComponent() == urlTxt){
            Configuracion.setUrlOrigen(urlTxt.getText());
        }
        else if (e.getComponent() == hostDestinoTxt){
            Configuracion.setHostDestino(hostDestinoTxt.getText());
        }
        else if (e.getComponent() == userNameDestinoTxt){
            Configuracion.setUserNameDestino(userNameDestinoTxt.getText());
        }
        else if (e.getComponent() == portDestinoTxt){
            Configuracion.setPortDestino(portDestinoTxt.getText());
        }
        else if (e.getComponent() == urlDestinoTxt){
            Configuracion.setUrlDestino(urlDestinoTxt.getText());
        }
        else if (e.getComponent() == urlServerLocationTxt){
            Configuracion.setUrlServerLocation(urlServerLocationTxt.getText());
        }
        
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vista.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vista().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel borlayLeft;
    private javax.swing.JPanel boxlayup;
    private javax.swing.JTextArea funcionesWebTxt;
    private javax.swing.JTextField hostDestinoTxt;
    private javax.swing.JTextField hostTxt;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField nombreCteTxt;
    private javax.swing.JPasswordField passwordDestinoTxt;
    private javax.swing.JPasswordField passwordTxt;
    private javax.swing.JTextField portDestinoTxt;
    private javax.swing.JTextField portTxt;
    private javax.swing.JTextArea testWsFormsTxt;
    private javax.swing.JTextField urlDestinoTxt;
    private javax.swing.JTextField urlServerLocationTxt;
    private javax.swing.JTextField urlTxt;
    private javax.swing.JTextField userNameDestinoTxt;
    private javax.swing.JTextField userNameTxt;
    // End of variables declaration//GEN-END:variables

   
}
